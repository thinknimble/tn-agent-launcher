name: Unit Tests
on: [push]
jobs:
  pytest:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: tn_agent_launcher_test_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-v2-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-v2-
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: |
          # Clean install to ensure no stale dependencies
          rm -rf .venv
          uv sync
          uv sync --group dev
      - name: "Create env file"
        run: |
          touch .env
          cat .env.example > .env
          echo "CI=true" >> .env
          cat .env
      - run: mkdir -p client/dist/static
      - name: Run tests and checks
        run: |
          source .venv/bin/activate
          python server/manage.py collectstatic
          pytest --mccabe --cov=tn_agent_launcher -vv server/tn_agent_launcher
          coverage report --fail-under=20
